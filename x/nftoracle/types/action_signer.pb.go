// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nftoracle/action_signer.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ActionSigner struct {
	ActorAddress  string    `protobuf:"bytes,1,opt,name=actor_address,json=actorAddress,proto3" json:"actor_address,omitempty"`
	OwnerAddress  string    `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	CreatedAt     time.Time `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	ExpiredAt     time.Time `protobuf:"bytes,4,opt,name=expired_at,json=expiredAt,proto3,stdtime" json:"expired_at"`
	Status        string    `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ExpiredHeight int64     `protobuf:"varint,6,opt,name=expired_height,json=expiredHeight,proto3" json:"expired_height,omitempty"`
}

func (m *ActionSigner) Reset()         { *m = ActionSigner{} }
func (m *ActionSigner) String() string { return proto.CompactTextString(m) }
func (*ActionSigner) ProtoMessage()    {}
func (*ActionSigner) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb36fd886ff3e92e, []int{0}
}
func (m *ActionSigner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActionSigner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActionSigner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActionSigner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionSigner.Merge(m, src)
}
func (m *ActionSigner) XXX_Size() int {
	return m.Size()
}
func (m *ActionSigner) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionSigner.DiscardUnknown(m)
}

var xxx_messageInfo_ActionSigner proto.InternalMessageInfo

func (m *ActionSigner) GetActorAddress() string {
	if m != nil {
		return m.ActorAddress
	}
	return ""
}

func (m *ActionSigner) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *ActionSigner) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *ActionSigner) GetExpiredAt() time.Time {
	if m != nil {
		return m.ExpiredAt
	}
	return time.Time{}
}

func (m *ActionSigner) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ActionSigner) GetExpiredHeight() int64 {
	if m != nil {
		return m.ExpiredHeight
	}
	return 0
}

type SetSignerSignature struct {
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *SetSignerSignature) Reset()         { *m = SetSignerSignature{} }
func (m *SetSignerSignature) String() string { return proto.CompactTextString(m) }
func (*SetSignerSignature) ProtoMessage()    {}
func (*SetSignerSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb36fd886ff3e92e, []int{1}
}
func (m *SetSignerSignature) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetSignerSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetSignerSignature.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetSignerSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSignerSignature.Merge(m, src)
}
func (m *SetSignerSignature) XXX_Size() int {
	return m.Size()
}
func (m *SetSignerSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSignerSignature.DiscardUnknown(m)
}

var xxx_messageInfo_SetSignerSignature proto.InternalMessageInfo

func (m *SetSignerSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *SetSignerSignature) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SetSignerParams struct {
	ActorAddress string    `protobuf:"bytes,1,opt,name=actor_address,json=actorAddress,proto3" json:"actor_address,omitempty"`
	ExpiredAt    time.Time `protobuf:"bytes,2,opt,name=expired_at,json=expiredAt,proto3,stdtime" json:"expired_at"`
}

func (m *SetSignerParams) Reset()         { *m = SetSignerParams{} }
func (m *SetSignerParams) String() string { return proto.CompactTextString(m) }
func (*SetSignerParams) ProtoMessage()    {}
func (*SetSignerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb36fd886ff3e92e, []int{2}
}
func (m *SetSignerParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetSignerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetSignerParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetSignerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSignerParams.Merge(m, src)
}
func (m *SetSignerParams) XXX_Size() int {
	return m.Size()
}
func (m *SetSignerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSignerParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetSignerParams proto.InternalMessageInfo

func (m *SetSignerParams) GetActorAddress() string {
	if m != nil {
		return m.ActorAddress
	}
	return ""
}

func (m *SetSignerParams) GetExpiredAt() time.Time {
	if m != nil {
		return m.ExpiredAt
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*ActionSigner)(nil), "thesixnetwork.sixnft.nftoracle.ActionSigner")
	proto.RegisterType((*SetSignerSignature)(nil), "thesixnetwork.sixnft.nftoracle.SetSignerSignature")
	proto.RegisterType((*SetSignerParams)(nil), "thesixnetwork.sixnft.nftoracle.SetSignerParams")
}

func init() { proto.RegisterFile("nftoracle/action_signer.proto", fileDescriptor_cb36fd886ff3e92e) }

var fileDescriptor_cb36fd886ff3e92e = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xc1, 0xaa, 0xda, 0x40,
	0x14, 0xcd, 0x68, 0x6b, 0xeb, 0x54, 0x5b, 0x08, 0xa5, 0x04, 0x69, 0xa3, 0x58, 0x0a, 0xae, 0x32,
	0xb4, 0xfd, 0x82, 0xd8, 0x4d, 0xa1, 0x5d, 0x14, 0xed, 0xaa, 0x1b, 0x19, 0xe3, 0x75, 0x12, 0x6a,
	0x32, 0x61, 0xe6, 0x06, 0x2d, 0xfd, 0x09, 0x7f, 0xe1, 0xfd, 0x8d, 0x4b, 0x97, 0x6f, 0xf5, 0xde,
	0x43, 0x7f, 0xe4, 0x91, 0x99, 0x44, 0x71, 0xf7, 0xde, 0xdb, 0x0c, 0x73, 0x0f, 0xe7, 0x9c, 0x7b,
	0x38, 0x5c, 0xfa, 0x21, 0x5b, 0xa2, 0x54, 0x3c, 0x5a, 0x01, 0xe3, 0x11, 0x26, 0x32, 0x9b, 0xe9,
	0x44, 0x64, 0xa0, 0x82, 0x5c, 0x49, 0x94, 0xae, 0x8f, 0x31, 0xe8, 0x64, 0x93, 0x01, 0xae, 0xa5,
	0xfa, 0x1b, 0x94, 0xdf, 0x25, 0x06, 0x27, 0x4d, 0xef, 0xad, 0x90, 0x42, 0x1a, 0x2a, 0x2b, 0x7f,
	0x56, 0xd5, 0xeb, 0x0b, 0x29, 0xc5, 0x0a, 0x98, 0x99, 0xe6, 0xc5, 0x92, 0x61, 0x92, 0x82, 0x46,
	0x9e, 0xe6, 0x96, 0x30, 0xbc, 0x6a, 0xd0, 0x4e, 0x68, 0xd6, 0x4d, 0xcd, 0x36, 0xf7, 0x23, 0xed,
	0xf2, 0x08, 0xa5, 0x9a, 0xf1, 0xc5, 0x42, 0x81, 0xd6, 0x1e, 0x19, 0x90, 0x51, 0x7b, 0xd2, 0x31,
	0x60, 0x68, 0xb1, 0x92, 0x24, 0xd7, 0x19, 0x9c, 0x49, 0x0d, 0x4b, 0x32, 0x60, 0x4d, 0xfa, 0x46,
	0x69, 0xa4, 0x80, 0x23, 0x2c, 0x66, 0x1c, 0xbd, 0xe6, 0x80, 0x8c, 0x5e, 0x7d, 0xe9, 0x05, 0x36,
	0x50, 0x50, 0x07, 0x0a, 0x7e, 0xd7, 0x81, 0xc6, 0x2f, 0x77, 0x37, 0x7d, 0x67, 0x7b, 0xdb, 0x27,
	0x93, 0x76, 0xa5, 0x0b, 0xb1, 0x34, 0x81, 0x4d, 0x9e, 0x28, 0x6b, 0xf2, 0xec, 0x31, 0x26, 0x95,
	0x2e, 0x44, 0xf7, 0x1d, 0x6d, 0x69, 0xe4, 0x58, 0x68, 0xef, 0xb9, 0xc9, 0x59, 0x4d, 0xee, 0x27,
	0xfa, 0xba, 0x36, 0x8f, 0x21, 0x11, 0x31, 0x7a, 0xad, 0x01, 0x19, 0x35, 0x27, 0xdd, 0x0a, 0xfd,
	0x6e, 0xc0, 0xe1, 0x4f, 0xea, 0x4e, 0x01, 0x6d, 0x3f, 0xe5, 0xcb, 0xb1, 0x50, 0xe0, 0xbe, 0xa7,
	0x6d, 0x5d, 0x0f, 0x55, 0x49, 0x67, 0xc0, 0xf5, 0xe8, 0x8b, 0x14, 0xb4, 0xe6, 0x02, 0xaa, 0x6e,
	0xea, 0x71, 0xf8, 0x9f, 0xbe, 0x39, 0xb9, 0xfd, 0xe2, 0x8a, 0xa7, 0xfa, 0x61, 0x9d, 0x5f, 0x36,
	0xd1, 0x78, 0x52, 0x13, 0xe3, 0x1f, 0xbb, 0x83, 0x4f, 0xf6, 0x07, 0x9f, 0xdc, 0x1d, 0x7c, 0xb2,
	0x3d, 0xfa, 0xce, 0xfe, 0xe8, 0x3b, 0xd7, 0x47, 0xdf, 0xf9, 0xf3, 0x59, 0x24, 0x18, 0x17, 0xf3,
	0x20, 0x92, 0x29, 0xbb, 0x38, 0x35, 0x66, 0x4f, 0x8d, 0x6d, 0xd8, 0xf9, 0x40, 0xf1, 0x5f, 0x0e,
	0x7a, 0xde, 0x32, 0x5b, 0xbf, 0xde, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x0e, 0x96, 0x65, 0xba,
	0x02, 0x00, 0x00,
}

func (m *ActionSigner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActionSigner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActionSigner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExpiredHeight != 0 {
		i = encodeVarintActionSigner(dAtA, i, uint64(m.ExpiredHeight))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x2a
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ExpiredAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintActionSigner(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintActionSigner(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ActorAddress) > 0 {
		i -= len(m.ActorAddress)
		copy(dAtA[i:], m.ActorAddress)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.ActorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetSignerSignature) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetSignerSignature) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetSignerSignature) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetSignerParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetSignerParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetSignerParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ExpiredAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintActionSigner(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x12
	if len(m.ActorAddress) > 0 {
		i -= len(m.ActorAddress)
		copy(dAtA[i:], m.ActorAddress)
		i = encodeVarintActionSigner(dAtA, i, uint64(len(m.ActorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintActionSigner(dAtA []byte, offset int, v uint64) int {
	offset -= sovActionSigner(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ActionSigner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ActorAddress)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovActionSigner(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt)
	n += 1 + l + sovActionSigner(uint64(l))
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	if m.ExpiredHeight != 0 {
		n += 1 + sovActionSigner(uint64(m.ExpiredHeight))
	}
	return n
}

func (m *SetSignerSignature) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	return n
}

func (m *SetSignerParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ActorAddress)
	if l > 0 {
		n += 1 + l + sovActionSigner(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt)
	n += 1 + l + sovActionSigner(uint64(l))
	return n
}

func sovActionSigner(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozActionSigner(x uint64) (n int) {
	return sovActionSigner(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ActionSigner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActionSigner
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActionSigner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActionSigner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiredAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ExpiredAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiredHeight", wireType)
			}
			m.ExpiredHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiredHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActionSigner(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActionSigner
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetSignerSignature) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActionSigner
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetSignerSignature: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetSignerSignature: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActionSigner(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActionSigner
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetSignerParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActionSigner
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetSignerParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetSignerParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiredAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActionSigner
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthActionSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ExpiredAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActionSigner(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthActionSigner
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipActionSigner(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowActionSigner
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActionSigner
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthActionSigner
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupActionSigner
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthActionSigner
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthActionSigner        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowActionSigner          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupActionSigner = fmt.Errorf("proto: unexpected end of group")
)
