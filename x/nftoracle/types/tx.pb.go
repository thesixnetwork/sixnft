// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nftoracle/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateMintRequest struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NftSchemaCode   string `protobuf:"bytes,2,opt,name=nftSchemaCode,proto3" json:"nftSchemaCode,omitempty"`
	TokenId         string `protobuf:"bytes,3,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	RequiredConfirm uint64 `protobuf:"varint,4,opt,name=requiredConfirm,proto3" json:"requiredConfirm,omitempty"`
}

func (m *MsgCreateMintRequest) Reset()         { *m = MsgCreateMintRequest{} }
func (m *MsgCreateMintRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMintRequest) ProtoMessage()    {}
func (*MsgCreateMintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{0}
}
func (m *MsgCreateMintRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMintRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMintRequest.Merge(m, src)
}
func (m *MsgCreateMintRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMintRequest proto.InternalMessageInfo

func (m *MsgCreateMintRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMintRequest) GetNftSchemaCode() string {
	if m != nil {
		return m.NftSchemaCode
	}
	return ""
}

func (m *MsgCreateMintRequest) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *MsgCreateMintRequest) GetRequiredConfirm() uint64 {
	if m != nil {
		return m.RequiredConfirm
	}
	return 0
}

type MsgCreateMintRequestResponse struct {
	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NftSchemaCode string `protobuf:"bytes,2,opt,name=nftSchemaCode,proto3" json:"nftSchemaCode,omitempty"`
	TokenId       string `protobuf:"bytes,3,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
}

func (m *MsgCreateMintRequestResponse) Reset()         { *m = MsgCreateMintRequestResponse{} }
func (m *MsgCreateMintRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMintRequestResponse) ProtoMessage()    {}
func (*MsgCreateMintRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{1}
}
func (m *MsgCreateMintRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMintRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMintRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMintRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMintRequestResponse.Merge(m, src)
}
func (m *MsgCreateMintRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMintRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMintRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMintRequestResponse proto.InternalMessageInfo

func (m *MsgCreateMintRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateMintRequestResponse) GetNftSchemaCode() string {
	if m != nil {
		return m.NftSchemaCode
	}
	return ""
}

func (m *MsgCreateMintRequestResponse) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

type MsgSubmitMintResponse struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MintRequestID uint64 `protobuf:"varint,2,opt,name=mintRequestID,proto3" json:"mintRequestID,omitempty"`
	Base64NftData string `protobuf:"bytes,3,opt,name=base64NftData,proto3" json:"base64NftData,omitempty"`
}

func (m *MsgSubmitMintResponse) Reset()         { *m = MsgSubmitMintResponse{} }
func (m *MsgSubmitMintResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitMintResponse) ProtoMessage()    {}
func (*MsgSubmitMintResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{2}
}
func (m *MsgSubmitMintResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitMintResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitMintResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitMintResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitMintResponse.Merge(m, src)
}
func (m *MsgSubmitMintResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitMintResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitMintResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitMintResponse proto.InternalMessageInfo

func (m *MsgSubmitMintResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitMintResponse) GetMintRequestID() uint64 {
	if m != nil {
		return m.MintRequestID
	}
	return 0
}

func (m *MsgSubmitMintResponse) GetBase64NftData() string {
	if m != nil {
		return m.Base64NftData
	}
	return ""
}

type MsgSubmitMintResponseResponse struct {
	MintRequestID string `protobuf:"bytes,1,opt,name=mintRequestID,proto3" json:"mintRequestID,omitempty"`
}

func (m *MsgSubmitMintResponseResponse) Reset()         { *m = MsgSubmitMintResponseResponse{} }
func (m *MsgSubmitMintResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitMintResponseResponse) ProtoMessage()    {}
func (*MsgSubmitMintResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{3}
}
func (m *MsgSubmitMintResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitMintResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitMintResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitMintResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitMintResponseResponse.Merge(m, src)
}
func (m *MsgSubmitMintResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitMintResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitMintResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitMintResponseResponse proto.InternalMessageInfo

func (m *MsgSubmitMintResponseResponse) GetMintRequestID() string {
	if m != nil {
		return m.MintRequestID
	}
	return ""
}

type MsgCreateActionRequest struct {
	Creator               string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Vm                    string `protobuf:"bytes,2,opt,name=vm,proto3" json:"vm,omitempty"`
	Base64ActionSignature string `protobuf:"bytes,3,opt,name=base64ActionSignature,proto3" json:"base64ActionSignature,omitempty"`
	RequiredConfirm       uint64 `protobuf:"varint,4,opt,name=requiredConfirm,proto3" json:"requiredConfirm,omitempty"`
}

func (m *MsgCreateActionRequest) Reset()         { *m = MsgCreateActionRequest{} }
func (m *MsgCreateActionRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateActionRequest) ProtoMessage()    {}
func (*MsgCreateActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{4}
}
func (m *MsgCreateActionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateActionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateActionRequest.Merge(m, src)
}
func (m *MsgCreateActionRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateActionRequest proto.InternalMessageInfo

func (m *MsgCreateActionRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateActionRequest) GetVm() string {
	if m != nil {
		return m.Vm
	}
	return ""
}

func (m *MsgCreateActionRequest) GetBase64ActionSignature() string {
	if m != nil {
		return m.Base64ActionSignature
	}
	return ""
}

func (m *MsgCreateActionRequest) GetRequiredConfirm() uint64 {
	if m != nil {
		return m.RequiredConfirm
	}
	return 0
}

type MsgCreateActionRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateActionRequestResponse) Reset()         { *m = MsgCreateActionRequestResponse{} }
func (m *MsgCreateActionRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateActionRequestResponse) ProtoMessage()    {}
func (*MsgCreateActionRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{5}
}
func (m *MsgCreateActionRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateActionRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateActionRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateActionRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateActionRequestResponse.Merge(m, src)
}
func (m *MsgCreateActionRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateActionRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateActionRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateActionRequestResponse proto.InternalMessageInfo

func (m *MsgCreateActionRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgSubmitActionResponse struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ActionRequestID uint64 `protobuf:"varint,2,opt,name=actionRequestID,proto3" json:"actionRequestID,omitempty"`
	Base64NftData   string `protobuf:"bytes,3,opt,name=base64NftData,proto3" json:"base64NftData,omitempty"`
}

func (m *MsgSubmitActionResponse) Reset()         { *m = MsgSubmitActionResponse{} }
func (m *MsgSubmitActionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitActionResponse) ProtoMessage()    {}
func (*MsgSubmitActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{6}
}
func (m *MsgSubmitActionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitActionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitActionResponse.Merge(m, src)
}
func (m *MsgSubmitActionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitActionResponse proto.InternalMessageInfo

func (m *MsgSubmitActionResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitActionResponse) GetActionRequestID() uint64 {
	if m != nil {
		return m.ActionRequestID
	}
	return 0
}

func (m *MsgSubmitActionResponse) GetBase64NftData() string {
	if m != nil {
		return m.Base64NftData
	}
	return ""
}

type MsgSubmitActionResponseResponse struct {
	ActionRequestID string `protobuf:"bytes,1,opt,name=actionRequestID,proto3" json:"actionRequestID,omitempty"`
}

func (m *MsgSubmitActionResponseResponse) Reset()         { *m = MsgSubmitActionResponseResponse{} }
func (m *MsgSubmitActionResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitActionResponseResponse) ProtoMessage()    {}
func (*MsgSubmitActionResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7fb5383b6da1e6e, []int{7}
}
func (m *MsgSubmitActionResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitActionResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitActionResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitActionResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitActionResponseResponse.Merge(m, src)
}
func (m *MsgSubmitActionResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitActionResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitActionResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitActionResponseResponse proto.InternalMessageInfo

func (m *MsgSubmitActionResponseResponse) GetActionRequestID() string {
	if m != nil {
		return m.ActionRequestID
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateMintRequest)(nil), "thesixnetwork.sixnft.nftoracle.MsgCreateMintRequest")
	proto.RegisterType((*MsgCreateMintRequestResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgCreateMintRequestResponse")
	proto.RegisterType((*MsgSubmitMintResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgSubmitMintResponse")
	proto.RegisterType((*MsgSubmitMintResponseResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgSubmitMintResponseResponse")
	proto.RegisterType((*MsgCreateActionRequest)(nil), "thesixnetwork.sixnft.nftoracle.MsgCreateActionRequest")
	proto.RegisterType((*MsgCreateActionRequestResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgCreateActionRequestResponse")
	proto.RegisterType((*MsgSubmitActionResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgSubmitActionResponse")
	proto.RegisterType((*MsgSubmitActionResponseResponse)(nil), "thesixnetwork.sixnft.nftoracle.MsgSubmitActionResponseResponse")
}

func init() { proto.RegisterFile("nftoracle/tx.proto", fileDescriptor_b7fb5383b6da1e6e) }

var fileDescriptor_b7fb5383b6da1e6e = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xeb, 0x2e, 0x02, 0xf1, 0x4a, 0x6c, 0xc2, 0x6c, 0x10, 0x55, 0x10, 0xa6, 0x88, 0x43,
	0x4f, 0x09, 0x7f, 0xca, 0xb8, 0xf0, 0x47, 0xd0, 0x71, 0x98, 0xa6, 0x72, 0x48, 0x6f, 0xdc, 0xd2,
	0xc4, 0x49, 0xad, 0x11, 0xbb, 0xb3, 0x9d, 0x51, 0x0e, 0x9c, 0x38, 0x20, 0x21, 0x21, 0xed, 0xcc,
	0x91, 0x2f, 0xc2, 0x95, 0xe3, 0x8e, 0x1c, 0x51, 0xfb, 0x45, 0x50, 0x9b, 0xd4, 0x2c, 0xad, 0xb7,
	0x95, 0xee, 0xd4, 0xe6, 0xb1, 0x1f, 0x3f, 0x3f, 0xbf, 0xaf, 0x2d, 0x03, 0x66, 0x89, 0xe2, 0x22,
	0x8c, 0xde, 0x13, 0x5f, 0x0d, 0xbd, 0x81, 0xe0, 0x8a, 0x63, 0x47, 0xf5, 0x89, 0xa4, 0x43, 0x46,
	0xd4, 0x07, 0x2e, 0x0e, 0xbc, 0xc9, 0xdf, 0x44, 0x79, 0x7a, 0xa2, 0xfb, 0x1d, 0xc1, 0x66, 0x47,
	0xa6, 0x6d, 0x41, 0x42, 0x45, 0x3a, 0x94, 0xa9, 0x80, 0x1c, 0xe6, 0x44, 0x2a, 0x6c, 0xc3, 0xd5,
	0x68, 0x22, 0x72, 0x61, 0xa3, 0x6d, 0xd4, 0xbc, 0x16, 0xcc, 0x3e, 0xf1, 0x7d, 0xb8, 0xce, 0x12,
	0xd5, 0x8d, 0xfa, 0x24, 0x0b, 0xdb, 0x3c, 0x26, 0x76, 0x7d, 0x3a, 0x5e, 0x15, 0x27, 0x7e, 0xc5,
	0x0f, 0x08, 0xdb, 0x8b, 0xed, 0xb5, 0xc2, 0x5f, 0x7e, 0xe2, 0x26, 0x6c, 0x08, 0x72, 0x98, 0x53,
	0x41, 0xe2, 0x36, 0x67, 0x09, 0x15, 0x99, 0x6d, 0x6d, 0xa3, 0xa6, 0x15, 0xcc, 0xcb, 0x2e, 0x83,
	0x3b, 0x26, 0xb6, 0x80, 0xc8, 0x01, 0x67, 0x92, 0xe0, 0x75, 0xa8, 0xd3, 0x78, 0x8a, 0x67, 0x05,
	0x75, 0x1a, 0x5f, 0x96, 0xcc, 0xfd, 0x04, 0x5b, 0x1d, 0x99, 0x76, 0xf3, 0x5e, 0x46, 0x55, 0x91,
	0x57, 0x06, 0x9d, 0x5b, 0x8c, 0xec, 0x1f, 0xd9, 0xde, 0xee, 0x34, 0xd2, 0x0a, 0xaa, 0xe2, 0x64,
	0x56, 0x2f, 0x94, 0x64, 0xa7, 0xf5, 0x36, 0x51, 0xbb, 0xa1, 0x0a, 0xcb, 0xe0, 0xaa, 0xe8, 0xbe,
	0x81, 0xbb, 0xc6, 0x78, 0x8d, 0xb1, 0x10, 0x56, 0xc0, 0x54, 0x45, 0xf7, 0x07, 0x82, 0x5b, 0xba,
	0x6c, 0xaf, 0x22, 0x45, 0x39, 0xbb, 0xb8, 0xa9, 0xeb, 0x50, 0x3f, 0xca, 0xca, 0x7a, 0xd5, 0x8f,
	0x32, 0xdc, 0x82, 0xad, 0x02, 0xae, 0x58, 0xa0, 0x4b, 0x53, 0x16, 0xaa, 0x5c, 0x90, 0x92, 0xdc,
	0x3c, 0xf8, 0x1f, 0xad, 0x7d, 0x00, 0x8e, 0x99, 0xf1, 0xac, 0xe6, 0xba, 0x9f, 0x11, 0xdc, 0xd6,
	0xe5, 0x99, 0x59, 0x2e, 0xec, 0x4f, 0x13, 0x36, 0xc2, 0xd3, 0xcb, 0xeb, 0x0e, 0xcd, 0xcb, 0x4b,
	0xf6, 0x68, 0x1f, 0xee, 0x9d, 0x01, 0xa1, 0x61, 0x0c, 0x91, 0x05, 0xd4, 0xbc, 0xfc, 0xe8, 0xa7,
	0x05, 0x6b, 0x1d, 0x99, 0xe2, 0x2f, 0x08, 0x6e, 0x2c, 0xde, 0xc0, 0x96, 0x77, 0xfe, 0xdd, 0xf5,
	0x4c, 0x77, 0xa3, 0xf1, 0x6c, 0x15, 0x97, 0x66, 0xff, 0x8a, 0x00, 0x1b, 0xce, 0xff, 0x93, 0x25,
	0x16, 0x5d, 0xb4, 0x35, 0x9e, 0xaf, 0x64, 0xd3, 0xa9, 0xdf, 0x10, 0xdc, 0x34, 0x9d, 0xe2, 0x9d,
	0xa5, 0xb7, 0x58, 0xf1, 0x35, 0x5e, 0xac, 0xe6, 0xd3, 0x3c, 0xc7, 0x08, 0x36, 0x8d, 0xc7, 0xef,
	0xe9, 0xd2, 0xfb, 0xac, 0x1a, 0x1b, 0x2f, 0x57, 0x34, 0xce, 0x7e, 0x5f, 0xef, 0xff, 0x1a, 0x39,
	0xe8, 0x64, 0xe4, 0xa0, 0x3f, 0x23, 0x07, 0x1d, 0x8f, 0x9d, 0xda, 0xc9, 0xd8, 0xa9, 0xfd, 0x1e,
	0x3b, 0xb5, 0x77, 0x0f, 0x53, 0xaa, 0xfa, 0x79, 0xcf, 0x8b, 0x78, 0xe6, 0x57, 0x42, 0xfc, 0x22,
	0xc4, 0x1f, 0xfa, 0xa7, 0x9e, 0x8b, 0x8f, 0x03, 0x22, 0x7b, 0x57, 0xa6, 0x4f, 0xc6, 0xe3, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x00, 0x15, 0x1f, 0x6f, 0x48, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateMintRequest(ctx context.Context, in *MsgCreateMintRequest, opts ...grpc.CallOption) (*MsgCreateMintRequestResponse, error)
	SubmitMintResponse(ctx context.Context, in *MsgSubmitMintResponse, opts ...grpc.CallOption) (*MsgSubmitMintResponseResponse, error)
	CreateActionRequest(ctx context.Context, in *MsgCreateActionRequest, opts ...grpc.CallOption) (*MsgCreateActionRequestResponse, error)
	SubmitActionResponse(ctx context.Context, in *MsgSubmitActionResponse, opts ...grpc.CallOption) (*MsgSubmitActionResponseResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateMintRequest(ctx context.Context, in *MsgCreateMintRequest, opts ...grpc.CallOption) (*MsgCreateMintRequestResponse, error) {
	out := new(MsgCreateMintRequestResponse)
	err := c.cc.Invoke(ctx, "/thesixnetwork.sixnft.nftoracle.Msg/CreateMintRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitMintResponse(ctx context.Context, in *MsgSubmitMintResponse, opts ...grpc.CallOption) (*MsgSubmitMintResponseResponse, error) {
	out := new(MsgSubmitMintResponseResponse)
	err := c.cc.Invoke(ctx, "/thesixnetwork.sixnft.nftoracle.Msg/SubmitMintResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateActionRequest(ctx context.Context, in *MsgCreateActionRequest, opts ...grpc.CallOption) (*MsgCreateActionRequestResponse, error) {
	out := new(MsgCreateActionRequestResponse)
	err := c.cc.Invoke(ctx, "/thesixnetwork.sixnft.nftoracle.Msg/CreateActionRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitActionResponse(ctx context.Context, in *MsgSubmitActionResponse, opts ...grpc.CallOption) (*MsgSubmitActionResponseResponse, error) {
	out := new(MsgSubmitActionResponseResponse)
	err := c.cc.Invoke(ctx, "/thesixnetwork.sixnft.nftoracle.Msg/SubmitActionResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateMintRequest(context.Context, *MsgCreateMintRequest) (*MsgCreateMintRequestResponse, error)
	SubmitMintResponse(context.Context, *MsgSubmitMintResponse) (*MsgSubmitMintResponseResponse, error)
	CreateActionRequest(context.Context, *MsgCreateActionRequest) (*MsgCreateActionRequestResponse, error)
	SubmitActionResponse(context.Context, *MsgSubmitActionResponse) (*MsgSubmitActionResponseResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateMintRequest(ctx context.Context, req *MsgCreateMintRequest) (*MsgCreateMintRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMintRequest not implemented")
}
func (*UnimplementedMsgServer) SubmitMintResponse(ctx context.Context, req *MsgSubmitMintResponse) (*MsgSubmitMintResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitMintResponse not implemented")
}
func (*UnimplementedMsgServer) CreateActionRequest(ctx context.Context, req *MsgCreateActionRequest) (*MsgCreateActionRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActionRequest not implemented")
}
func (*UnimplementedMsgServer) SubmitActionResponse(ctx context.Context, req *MsgSubmitActionResponse) (*MsgSubmitActionResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitActionResponse not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateMintRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMintRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thesixnetwork.sixnft.nftoracle.Msg/CreateMintRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMintRequest(ctx, req.(*MsgCreateMintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitMintResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitMintResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitMintResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thesixnetwork.sixnft.nftoracle.Msg/SubmitMintResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitMintResponse(ctx, req.(*MsgSubmitMintResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateActionRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateActionRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thesixnetwork.sixnft.nftoracle.Msg/CreateActionRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateActionRequest(ctx, req.(*MsgCreateActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitActionResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitActionResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitActionResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thesixnetwork.sixnft.nftoracle.Msg/SubmitActionResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitActionResponse(ctx, req.(*MsgSubmitActionResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thesixnetwork.sixnft.nftoracle.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMintRequest",
			Handler:    _Msg_CreateMintRequest_Handler,
		},
		{
			MethodName: "SubmitMintResponse",
			Handler:    _Msg_SubmitMintResponse_Handler,
		},
		{
			MethodName: "CreateActionRequest",
			Handler:    _Msg_CreateActionRequest_Handler,
		},
		{
			MethodName: "SubmitActionResponse",
			Handler:    _Msg_SubmitActionResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nftoracle/tx.proto",
}

func (m *MsgCreateMintRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMintRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMintRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequiredConfirm != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RequiredConfirm))
		i--
		dAtA[i] = 0x20
	}
	if len(m.TokenId) > 0 {
		i -= len(m.TokenId)
		copy(dAtA[i:], m.TokenId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NftSchemaCode) > 0 {
		i -= len(m.NftSchemaCode)
		copy(dAtA[i:], m.NftSchemaCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftSchemaCode)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMintRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMintRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMintRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TokenId) > 0 {
		i -= len(m.TokenId)
		copy(dAtA[i:], m.TokenId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NftSchemaCode) > 0 {
		i -= len(m.NftSchemaCode)
		copy(dAtA[i:], m.NftSchemaCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftSchemaCode)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitMintResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitMintResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitMintResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Base64NftData) > 0 {
		i -= len(m.Base64NftData)
		copy(dAtA[i:], m.Base64NftData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Base64NftData)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MintRequestID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MintRequestID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitMintResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitMintResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitMintResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MintRequestID) > 0 {
		i -= len(m.MintRequestID)
		copy(dAtA[i:], m.MintRequestID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MintRequestID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateActionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateActionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateActionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequiredConfirm != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RequiredConfirm))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Base64ActionSignature) > 0 {
		i -= len(m.Base64ActionSignature)
		copy(dAtA[i:], m.Base64ActionSignature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Base64ActionSignature)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Vm) > 0 {
		i -= len(m.Vm)
		copy(dAtA[i:], m.Vm)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vm)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateActionRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateActionRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateActionRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitActionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitActionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitActionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Base64NftData) > 0 {
		i -= len(m.Base64NftData)
		copy(dAtA[i:], m.Base64NftData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Base64NftData)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ActionRequestID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ActionRequestID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitActionResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitActionResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitActionResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ActionRequestID) > 0 {
		i -= len(m.ActionRequestID)
		copy(dAtA[i:], m.ActionRequestID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ActionRequestID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateMintRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NftSchemaCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TokenId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RequiredConfirm != 0 {
		n += 1 + sovTx(uint64(m.RequiredConfirm))
	}
	return n
}

func (m *MsgCreateMintRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.NftSchemaCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TokenId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitMintResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MintRequestID != 0 {
		n += 1 + sovTx(uint64(m.MintRequestID))
	}
	l = len(m.Base64NftData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitMintResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MintRequestID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateActionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vm)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Base64ActionSignature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RequiredConfirm != 0 {
		n += 1 + sovTx(uint64(m.RequiredConfirm))
	}
	return n
}

func (m *MsgCreateActionRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgSubmitActionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ActionRequestID != 0 {
		n += 1 + sovTx(uint64(m.ActionRequestID))
	}
	l = len(m.Base64NftData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitActionResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ActionRequestID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateMintRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMintRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMintRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftSchemaCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequiredConfirm", wireType)
			}
			m.RequiredConfirm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequiredConfirm |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMintRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMintRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMintRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftSchemaCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftSchemaCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitMintResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitMintResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitMintResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintRequestID", wireType)
			}
			m.MintRequestID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MintRequestID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base64NftData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Base64NftData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitMintResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitMintResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitMintResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintRequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MintRequestID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateActionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateActionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateActionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vm", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vm = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base64ActionSignature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Base64ActionSignature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequiredConfirm", wireType)
			}
			m.RequiredConfirm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequiredConfirm |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateActionRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateActionRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateActionRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitActionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitActionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitActionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionRequestID", wireType)
			}
			m.ActionRequestID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActionRequestID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base64NftData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Base64NftData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitActionResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitActionResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitActionResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionRequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActionRequestID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
