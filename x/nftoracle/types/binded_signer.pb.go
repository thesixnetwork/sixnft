// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nftoracle/binded_signer.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type XSetSignerParams struct {
	ActorAddress string    `protobuf:"bytes,1,opt,name=actor_address,json=actorAddress,proto3" json:"actor_address,omitempty"`
	ExpiredAt    time.Time `protobuf:"bytes,2,opt,name=expired_at,json=expiredAt,proto3,stdtime" json:"expired_at"`
}

func (m *XSetSignerParams) Reset()         { *m = XSetSignerParams{} }
func (m *XSetSignerParams) String() string { return proto.CompactTextString(m) }
func (*XSetSignerParams) ProtoMessage()    {}
func (*XSetSignerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eadb01523f739d5, []int{0}
}
func (m *XSetSignerParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *XSetSignerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_XSetSignerParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *XSetSignerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XSetSignerParams.Merge(m, src)
}
func (m *XSetSignerParams) XXX_Size() int {
	return m.Size()
}
func (m *XSetSignerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_XSetSignerParams.DiscardUnknown(m)
}

var xxx_messageInfo_XSetSignerParams proto.InternalMessageInfo

func (m *XSetSignerParams) GetActorAddress() string {
	if m != nil {
		return m.ActorAddress
	}
	return ""
}

func (m *XSetSignerParams) GetExpiredAt() time.Time {
	if m != nil {
		return m.ExpiredAt
	}
	return time.Time{}
}

type BindedSigner struct {
	OwnerAddress string              `protobuf:"bytes,1,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	Signers      []*XSetSignerParams `protobuf:"bytes,2,rep,name=signers,proto3" json:"signers,omitempty"`
	ActorCount   uint64              `protobuf:"varint,3,opt,name=actorCount,proto3" json:"actorCount,omitempty"`
}

func (m *BindedSigner) Reset()         { *m = BindedSigner{} }
func (m *BindedSigner) String() string { return proto.CompactTextString(m) }
func (*BindedSigner) ProtoMessage()    {}
func (*BindedSigner) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eadb01523f739d5, []int{1}
}
func (m *BindedSigner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BindedSigner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BindedSigner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BindedSigner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindedSigner.Merge(m, src)
}
func (m *BindedSigner) XXX_Size() int {
	return m.Size()
}
func (m *BindedSigner) XXX_DiscardUnknown() {
	xxx_messageInfo_BindedSigner.DiscardUnknown(m)
}

var xxx_messageInfo_BindedSigner proto.InternalMessageInfo

func (m *BindedSigner) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *BindedSigner) GetSigners() []*XSetSignerParams {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *BindedSigner) GetActorCount() uint64 {
	if m != nil {
		return m.ActorCount
	}
	return 0
}

func init() {
	proto.RegisterType((*XSetSignerParams)(nil), "thesixnetwork.sixnft.nftoracle._SetSignerParams")
	proto.RegisterType((*BindedSigner)(nil), "thesixnetwork.sixnft.nftoracle.BindedSigner")
}

func init() { proto.RegisterFile("nftoracle/binded_signer.proto", fileDescriptor_3eadb01523f739d5) }

var fileDescriptor_3eadb01523f739d5 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4e, 0x2a, 0x31,
	0x18, 0x85, 0xa7, 0x70, 0x73, 0xef, 0xa5, 0x60, 0x62, 0x26, 0x2e, 0x26, 0x24, 0x96, 0x09, 0x6e,
	0x66, 0xd5, 0x2a, 0x3e, 0x01, 0xb0, 0xd3, 0x8d, 0x19, 0x5c, 0xb9, 0x99, 0x74, 0x98, 0x32, 0x4c,
	0x64, 0xa6, 0x93, 0xf6, 0x27, 0x60, 0xe2, 0x43, 0xf0, 0x04, 0x3e, 0x0f, 0x4b, 0x96, 0xae, 0xd4,
	0xc0, 0x8b, 0x18, 0x5a, 0x47, 0xd1, 0x85, 0xbb, 0xbf, 0x27, 0xff, 0xe9, 0xd7, 0x73, 0x8a, 0x4f,
	0x8b, 0x09, 0x48, 0xc5, 0xc7, 0x33, 0xc1, 0xe2, 0xac, 0x48, 0x44, 0x12, 0xe9, 0x2c, 0x2d, 0x84,
	0xa2, 0xa5, 0x92, 0x20, 0x5d, 0x02, 0x53, 0xa1, 0xb3, 0x65, 0x21, 0x60, 0x21, 0xd5, 0x3d, 0xdd,
	0x8f, 0x13, 0xa0, 0x9f, 0x9e, 0xf6, 0x49, 0x2a, 0x53, 0x69, 0x56, 0xd9, 0x7e, 0xb2, 0xae, 0x76,
	0x27, 0x95, 0x32, 0x9d, 0x09, 0x66, 0x4e, 0xf1, 0x7c, 0xc2, 0x20, 0xcb, 0x85, 0x06, 0x9e, 0x97,
	0x76, 0xa1, 0xfb, 0x88, 0x8f, 0xa3, 0x91, 0x80, 0x91, 0x41, 0xdd, 0x70, 0xc5, 0x73, 0xed, 0x9e,
	0xe1, 0x23, 0x3e, 0x06, 0xa9, 0x22, 0x9e, 0x24, 0x4a, 0x68, 0xed, 0x21, 0x1f, 0x05, 0x8d, 0xb0,
	0x65, 0xc4, 0xbe, 0xd5, 0xdc, 0x21, 0xc6, 0x62, 0x59, 0x66, 0x4a, 0x24, 0x11, 0x07, 0xaf, 0xe6,
	0xa3, 0xa0, 0xd9, 0x6b, 0x53, 0x8b, 0xa3, 0x15, 0x8e, 0xde, 0x56, 0xb8, 0xc1, 0xff, 0xf5, 0x4b,
	0xc7, 0x59, 0xbd, 0x76, 0x50, 0xd8, 0xf8, 0xf0, 0xf5, 0xa1, 0xfb, 0x84, 0x70, 0x6b, 0x60, 0xc2,
	0xda, 0x07, 0xb8, 0x5d, 0xdc, 0x92, 0x8b, 0x42, 0x54, 0x94, 0x8a, 0x7c, 0xa8, 0xb9, 0x57, 0xf8,
	0x9f, 0x6d, 0x46, 0x7b, 0x35, 0xbf, 0x1e, 0x34, 0x7b, 0xe7, 0xf4, 0xf7, 0x6e, 0xe8, 0xcf, 0x84,
	0x61, 0x75, 0x81, 0x4b, 0x30, 0x36, 0xa9, 0x86, 0x72, 0x5e, 0x80, 0x57, 0xf7, 0x51, 0xf0, 0x27,
	0x3c, 0x50, 0x06, 0xd7, 0xeb, 0x2d, 0x41, 0x9b, 0x2d, 0x41, 0x6f, 0x5b, 0x82, 0x56, 0x3b, 0xe2,
	0x6c, 0x76, 0xc4, 0x79, 0xde, 0x11, 0xe7, 0xee, 0x22, 0xcd, 0x60, 0x3a, 0x8f, 0xe9, 0x58, 0xe6,
	0xec, 0x1b, 0x9e, 0x59, 0x3c, 0x5b, 0xb2, 0xaf, 0x0f, 0x85, 0x87, 0x52, 0xe8, 0xf8, 0xaf, 0xa9,
	0xe5, 0xf2, 0x3d, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x92, 0xaa, 0xb6, 0xea, 0x01, 0x00, 0x00,
}

func (m *XSetSignerParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *XSetSignerParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *XSetSignerParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ExpiredAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintBindedSigner(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x12
	if len(m.ActorAddress) > 0 {
		i -= len(m.ActorAddress)
		copy(dAtA[i:], m.ActorAddress)
		i = encodeVarintBindedSigner(dAtA, i, uint64(len(m.ActorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BindedSigner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BindedSigner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BindedSigner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActorCount != 0 {
		i = encodeVarintBindedSigner(dAtA, i, uint64(m.ActorCount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Signers) > 0 {
		for iNdEx := len(m.Signers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Signers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBindedSigner(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintBindedSigner(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBindedSigner(dAtA []byte, offset int, v uint64) int {
	offset -= sovBindedSigner(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *XSetSignerParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ActorAddress)
	if l > 0 {
		n += 1 + l + sovBindedSigner(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiredAt)
	n += 1 + l + sovBindedSigner(uint64(l))
	return n
}

func (m *BindedSigner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovBindedSigner(uint64(l))
	}
	if len(m.Signers) > 0 {
		for _, e := range m.Signers {
			l = e.Size()
			n += 1 + l + sovBindedSigner(uint64(l))
		}
	}
	if m.ActorCount != 0 {
		n += 1 + sovBindedSigner(uint64(m.ActorCount))
	}
	return n
}

func sovBindedSigner(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBindedSigner(x uint64) (n int) {
	return sovBindedSigner(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *XSetSignerParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBindedSigner
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: _SetSignerParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: _SetSignerParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBindedSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiredAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBindedSigner
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ExpiredAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBindedSigner(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BindedSigner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBindedSigner
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BindedSigner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BindedSigner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBindedSigner
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBindedSigner
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signers = append(m.Signers, &XSetSignerParams{})
			if err := m.Signers[len(m.Signers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActorCount", wireType)
			}
			m.ActorCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActorCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBindedSigner(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBindedSigner
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBindedSigner(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBindedSigner
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBindedSigner
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBindedSigner
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBindedSigner
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBindedSigner
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBindedSigner        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBindedSigner          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBindedSigner = fmt.Errorf("proto: unexpected end of group")
)
