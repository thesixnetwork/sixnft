syntax = "proto3";
package sixnft.nftmngr;

// this line is used by starport scaffolding # proto/tx/import

import "google/protobuf/any.proto";
option go_package = "sixnft/x/nftmngr/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateNFTSchema(MsgCreateNFTSchema) returns (MsgCreateNFTSchemaResponse);
  rpc CreateMetadata(MsgCreateMetadata) returns (MsgCreateMetadataResponse);
  rpc PerformActionByAdmin(MsgPerformActionByAdmin) returns (MsgPerformActionByAdminResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateNFTSchema {
  string creator = 1;
  string nftSchemaBase64 = 2;
}

message MsgCreateNFTSchemaResponse {
  string code = 1;
}

message MsgCreateMetadata {
  string creator = 1;
  string nftSchemaCode = 2;
  string tokenId = 3;
  string base64NFTData = 4;
}

message MsgCreateMetadataResponse {
  string nftSchemaCode = 1;
  string tokenId = 2;
}

message OpenseaAttribute{
  string trait_type = 1; 
  google.protobuf.Any value = 2;
}

message UpdatedOpenseaAttributes {
  repeated OpenseaAttribute attributes = 1;
}

message UpdatedOriginData {
  oneof updated_origin_data {
    UpdatedOpenseaAttributes opensea = 1;
  }
}

message MsgPerformActionByAdmin {
  string creator = 1;
  string nft_schema_code = 2;
  string tokenId = 3;
  string action = 4;
  string ref_id = 5;
}

message MsgPerformActionByAdminResponse {
  string nft_schema_code = 1;
  string token_id = 2;
}

// this line is used by starport scaffolding # proto/tx/message
